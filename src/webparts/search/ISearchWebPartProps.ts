import ResultsLayoutOption from '../../models/ResultsLayoutOption';
import { ISortFieldConfiguration } from '../../models/ISortFieldConfiguration';
import ISortableFieldConfiguration from '../../models/ISortableFieldConfiguration';
import { ISearchResultType } from '../../models/ISearchResultType';
import { ICustomTemplateFieldValue } from '../../services/ResultService/ResultService';
import { ISynonymFieldConfiguration} from '../../models/ISynonymFieldConfiguration';
import IRefinerConfiguration from "../../models/IRefinerConfiguration";
import RefinersLayoutOption from "../../models/RefinersLayoutOptions";
import { PageOpenBehavior, QueryPathBehavior } from '../../helpers/UrlHelper';

export interface ISearchWebPartProps {
    queryKeywords: string;
    defaultSearchQuery: string;
    useDefaultSearchQuery: boolean;
    queryTemplate: string;
    resultSourceId: string;
    sortList: ISortFieldConfiguration[];
    enableQueryRules: boolean;
    maxResultsCount: number;
    selectedProperties: string;
    sortableFields: ISortableFieldConfiguration[];
    showPaging: boolean;
    showSearchBox: boolean;
    showRefinements: boolean;
    showResultsCount: boolean;
    showBlank: boolean;
    selectedLayout: ResultsLayoutOption;
    externalTemplateUrl: string;
    inlineTemplateText: string;
    webPartTitle: string;
    resultTypes: ISearchResultType[];
    sourceId: string;
    propertyId: string;
    propertyPath: string;
    rendererId: string;
    customTemplateFieldValues: ICustomTemplateFieldValue[];
    enableLocalization: boolean;
    synonymList: ISynonymFieldConfiguration[];
    searchQueryLanguage: number;
    templateParameters: { [key:string]: any };
    refinersConfiguration: IRefinerConfiguration[];
    searchResultsDataSourceReference: string;
    selectedLayoutRefiners: RefinersLayoutOption;
    searchInNewPage: boolean;
    pageUrl: string;
    queryPathBehavior: QueryPathBehavior;
    queryStringParameter: string;
    openBehavior: PageOpenBehavior;
    enableQuerySuggestions: boolean;
    placeholderText: string;
}
